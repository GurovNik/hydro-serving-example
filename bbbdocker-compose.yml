version: "3.5"
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:4.0.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - hydronet
    environment:
      - "ZOOKEEPER_CLIENT_PORT=2181"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "zookeeper"

  kafka:
    build: ./kafka
    container_name: kafka
    ports:
      - "19092:9092"
    networks:
      - extnet
      - hydronet
    environment:
      - "KAFKA_JMX_HOSTNAME=kafka"
      - "KAFKA_ADVERTISED_HOST_NAME=kafka"
      - "KAFKA_AUTO_CREATE_TOPICS_ENABLE=true"
      - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
      - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT://${KAFKA_ADVERTISED_HOST}:19092"
    depends_on:
      - zookeeper
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "kafka"

  postgres:
      image: postgres:9.6-alpine
      container_name: postgres
      ports:
        - "5432:5432"
      networks:
        - hydronet
      environment:
        - "POSTGRES_DB=docker"
        - "POSTGRES_USER=docker"
        - "POSTGRES_PASSWORD=docker"
      logging:
        driver: gelf
        options:
          gelf-address: "udp://172.16.0.38:12201"
          labels: "postgres"

  manager:
    image: ${manager_image}:${manager_version}
    container_name: manager
    ports:
      - "19091:9091"
    networks:
      - hydronet
      - extnet
    depends_on:
      - postgres
      - sidecar
    environment:
      - "ADVERTISED_MANAGER_HOST=manager"
      - "ADVERTISED_MANAGER_PORT=9091"
      - "DATABASE_HOST=postgres"
      - "SIDECAR_HOST=sidecar"
      - "NETWORK_NAME=demo_hydronet"
      - "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_KEY=${AWS_SECRET_KEY}"
      - "S3_MODEL_REGION=${S3_MODEL_REGION}"
      - "S3_MODEL_BUCKET=${S3_MODEL_BUCKET}"
      - "S3_MODEL_QUEUE=${S3_MODEL_QUEUE}"
      - "S3_MODEL_PATH=/models"
      - "LOCAL_MODEL_PATH=/models"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./models:/models
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "manager"

  sidecar:
    image: ${sidecar_image}:${sidecar_version}
    container_name: sidecar
    ports:
      - "8080:8080"
      - "8082:8082"
    networks:
      - extnet
      - hydronet
    environment:
      - "MANAGER_HOST=manager"
      - "MANAGER_PORT=9091"
      - "SERVICE_ID=-20"
      - "SERVICE_NAME=manager"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "sidecar"

  managerui:
    image: ${manager_ui_image}:${manager_ui_version}
    container_name: managerui
    ports:
      - "80:80"
    networks:
      - extnet
      - hydronet
    environment:
      - "MANAGER_HOST=sidecar:8080"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "managerui"

  kafka-serving:
    image: ${gateway_kafka_image}:${gateway_kafka_version}
    container_name: kafka-serving
    networks:
      - hydronet
    links:
      - kafka
      - sidecar
      - manager
    ports:
      - "19093:9091"
    depends_on:
      - sidecar
      - kafka
      - manager
    environment:
      - "SIDECAR_INGRESS_PORT=8080"
      - "SIDECAR_EGRESS_PORT=8081"
      - "SIDECAR_ADMIN_PORT=8082"
      - "SIDECAR_HOST=sidecar"
      - "KAFKA_HOST=kafka"
      - "KAFKA_PORT=9092"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "kafka-serving"

networks:
  hydronet:
    name: demo_hydronet
    internal: true
    ipam:
      config:
        - subnet: 172.16.0.0/24

  extnet:
    driver: bridge